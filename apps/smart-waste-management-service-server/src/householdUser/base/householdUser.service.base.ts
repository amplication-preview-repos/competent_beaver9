/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, HouseholdUser as PrismaHouseholdUser } from "@prisma/client";

export class HouseholdUserServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.HouseholdUserCountArgs, "select">
  ): Promise<number> {
    return this.prisma.householdUser.count(args);
  }

  async householdUsers(
    args: Prisma.HouseholdUserFindManyArgs
  ): Promise<PrismaHouseholdUser[]> {
    return this.prisma.householdUser.findMany(args);
  }
  async householdUser(
    args: Prisma.HouseholdUserFindUniqueArgs
  ): Promise<PrismaHouseholdUser | null> {
    return this.prisma.householdUser.findUnique(args);
  }
  async createHouseholdUser(
    args: Prisma.HouseholdUserCreateArgs
  ): Promise<PrismaHouseholdUser> {
    return this.prisma.householdUser.create(args);
  }
  async updateHouseholdUser(
    args: Prisma.HouseholdUserUpdateArgs
  ): Promise<PrismaHouseholdUser> {
    return this.prisma.householdUser.update(args);
  }
  async deleteHouseholdUser(
    args: Prisma.HouseholdUserDeleteArgs
  ): Promise<PrismaHouseholdUser> {
    return this.prisma.householdUser.delete(args);
  }
}
