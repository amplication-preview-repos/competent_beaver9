/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  WasteCollectionSchedule as PrismaWasteCollectionSchedule,
} from "@prisma/client";

export class WasteCollectionScheduleServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.WasteCollectionScheduleCountArgs, "select">
  ): Promise<number> {
    return this.prisma.wasteCollectionSchedule.count(args);
  }

  async wasteCollectionSchedules(
    args: Prisma.WasteCollectionScheduleFindManyArgs
  ): Promise<PrismaWasteCollectionSchedule[]> {
    return this.prisma.wasteCollectionSchedule.findMany(args);
  }
  async wasteCollectionSchedule(
    args: Prisma.WasteCollectionScheduleFindUniqueArgs
  ): Promise<PrismaWasteCollectionSchedule | null> {
    return this.prisma.wasteCollectionSchedule.findUnique(args);
  }
  async createWasteCollectionSchedule(
    args: Prisma.WasteCollectionScheduleCreateArgs
  ): Promise<PrismaWasteCollectionSchedule> {
    return this.prisma.wasteCollectionSchedule.create(args);
  }
  async updateWasteCollectionSchedule(
    args: Prisma.WasteCollectionScheduleUpdateArgs
  ): Promise<PrismaWasteCollectionSchedule> {
    return this.prisma.wasteCollectionSchedule.update(args);
  }
  async deleteWasteCollectionSchedule(
    args: Prisma.WasteCollectionScheduleDeleteArgs
  ): Promise<PrismaWasteCollectionSchedule> {
    return this.prisma.wasteCollectionSchedule.delete(args);
  }
}
